const personalQR = require('../models/personalQR');
const linkQR = require('../models/linkQR');
const textQR = require('../models/textQR');
const Session = require('../models/Session');
const personalDataQR = require('../models/personalDataQR');
const users = require('../models/users');
const jwt = require('jsonwebtoken');

const showList = (req, res) => {
    res.render('qrList');
};
const listQRCodes = async (req, res) => {
    try {
        console.log(req.body.email);
        const user = await users.findOne({ email: req.body.email });
        
        console.log(user);
        const currentAccount = user.email;
        console.log(currentAccount);
        if (!currentAccount) {
            return res.status(401).send('Unauthor');
        }
        
        
        // Retrieve all QR codes generated by the current user
        const personalQRCodes = await personalQR.find({ account: currentAccount });
        const linkQRCodes = await linkQR.find({ account: currentAccount });
        const textQRCodes = await textQR.find({ account: currentAccount });
        const personalDataQRCodes = await personalDataQR.find({ account: currentAccount });
        // Combine all QR codes into a single array
        const allQRCodes = [...personalQRCodes, ...linkQRCodes, ...textQRCodes, ...personalDataQRCodes];
        if (!allQRCodes) {
            return res.status(404).send('null');
        }

        // Send the list of QR codes to the client
        res.json({ qrCodes: allQRCodes });
        // Render the page with the list of QR codes
        // res.render('qrList', { qrCodes: allQRCodes });

    } catch (err) {
        console.error(err);
        res.status(500).send('Internal Server Error');
    }
};

module.exports = {
    showList,
    listQRCodes,
};
